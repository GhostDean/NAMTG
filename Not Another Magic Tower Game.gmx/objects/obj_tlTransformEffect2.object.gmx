<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sys = part_system_create();
part_system_depth(sys,-1000);


flareMinSize = 0.05;
flareMaxSize = 0.15;
flareMinSpd = 0.12;
flareMaxSpd = 0.72;
flareSpdInc = 0.06;

burstFlare = part_type_create();
part_type_shape(burstFlare,pt_shape_flare);
part_type_scale(burstFlare,2.29,2.67);
part_type_color3(particle1,8421631,6439294,4227327);
part_type_alpha3(burstFlare,0.69,0.58,0.06);
part_type_direction(burstFlare,0,359,-1,0);
part_type_gravity(burstFlare,0,270);
part_type_orientation(burstFlare,0,0,0,0,0);
part_type_blend(burstFlare,1);
part_type_life(burstFlare,50,60);

flareEmit = part_emitter_create(sys);
part_emitter_region(flareEmit,flareEmit,x,x,y,y,ps_shape_rectangle,0);

alarm[0] = 100;
alarm[1] = 50;
obj_tlPreFinalController.alarm[10] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(part_type_exists(burstFlare))
{
    part_type_destroy(burstFlare);
}

if(part_emitter_exists(sys,flareEmit))
{
    part_emitter_destroy(sys,flareEmit);
}

if(part_system_exists(sys))
{
    part_system_destroy(sys);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_tlFinalAttack);
obj_demonLead_combat.finalStart = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stop = true;
obj_demonLead_combat.shake = false;
sound_stop(sndQuake);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(stop) exit;
part_type_size(burstFlare,flareMinSize,flareMaxSize,0,0);
part_type_speed(burstFlare,flareMinSpd,flareMaxSpd,flareSpdInc,0);
part_emitter_burst(flareEmit,flareEmit,burstFlare,5);

flareMinSize += 0.002;
flareMaxSize += 0.006;
flareMinSpd += 0.04;
flareMaxSpd += 0.12;
flareSpdInc += 0.001;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(part_type_exists(burstFlare))
{
    part_type_destroy(burstFlare);
}

if(part_emitter_exists(sys,flareEmit))
{
    part_emitter_destroy(sys,flareEmit);
}

if(part_system_exists(sys))
{
    part_system_destroy(sys);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
