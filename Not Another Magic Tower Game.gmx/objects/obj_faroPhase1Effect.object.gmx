<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gap = 64;
color = c_gray;
time = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(time mod 5 == 0)
{
    rAng = choose(random_range(-30,30), random_range(150,210));
    px = 400 + 800 * cos(degtorad(rAng));
    py = 304 - 800 * sin(degtorad(rAng));
    p = instance_create(px, py, obj_faroDash);
    p.direction = point_direction(px,py,400,304);
    p.speed = 10;
}*/
//time += 1;

/*
p1 = instance_create(random_range(0,800),576,obj_faroPhase1Bubble); 
p1.speed = random_range(4.8,5.2);
p1.direction = random_range(85,95);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_alpha(0.5);
draw_set_color(color);
for(i = -240; i &lt; 800 + 240;i += gap)
{
    sx1 = i;
    sy1 = 0;
    dir1 = point_direction(sx1, sy1, 400, 608);
    ey1 = 200;
    if(dir1 != 270)
    {
        ex1 = sx1 - (ey1 - sy1)/tan(degtorad(dir1));
    }
    else
    {
        ex1 = sx1;
    }
    draw_line(sx1,sy1,ex1,ey1);
    
    sx2 = i;
    sy2 = 608;
    dir2 = point_direction(sx2, sy2, 400, 0);
    ey2 = 608 - 200;
    if(dir2 != 90)
    {
        ex2 = sx2 - (ey2 - sy2)/tan(degtorad(dir2));
    }
    else
    {
        ex2 = sx2;
    }
    draw_line(sx2,sy2,ex2,ey2);
}

draw_line(0,200,800,200);
draw_line(0,608 - 200,800,608 - 200);

tShift = time mod 20;
for(i = 0; i &lt; 5; i += 1)
{
    yShift = 3 * (i * 20 + tShift) - 0.5 * 0.02 * sqr(i * 20 + tShift);
    draw_line(0,yShift,800,yShift);
    draw_line(0,608-yShift,800,608-yShift);
}

//v0 * 100 - 0.5 * 0.05 * 10000 = 200
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
