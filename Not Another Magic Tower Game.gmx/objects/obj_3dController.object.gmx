<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_start();
cSpd = 1;
cStart = 0;
bAngle = 0;
bSpd = 1;

//alarm[4] = 5;

steps = 0;
yOffset = 0;

rWidth = 576;
rHeight = 608;
rSprWidth = 16;
rDepth = 40;

instance_create(x,y,obj_3dFloorDrawer);
instance_create(x,y,obj_3dCeilDrawer);
instance_create(x,y,obj_3dCubeDrawer);
instance_create(rWidth/2,480,obj_3dKidGay);
instance_create(rWidth/2+80,330,obj_3dRedGay);
instance_create(rWidth/2-80,330,obj_3dBlueGay);

dLine[0] = 520;
dLine[1] = 500;
dLine[2] = 350;
dLine[3] = 250;
dLine[4] = 150;
dLine[5] = 100;

xLine[0] = rWidth/2 - 32;
xLine[1] = rWidth/2 + 40;
xLine[2] = rWidth/2 + 48;
xLine[3] = rWidth/2 - 64;
xLine[4] = rWidth/2 + 160;
xLine[5] = rWidth/2 - 192;

hLine[0] = 0;
hLine[1] = 12;
hLine[2] = -15;
hLine[3] = -20;
hLine[4] = -26;
hLine[5] = -24;

for(i = 0; i &lt;= 5; i += 1)
{
    star = instance_create(xLine[i],dLine[i],obj_3dJumpingStar);
    with(star)
    {
        myDepth = other.dLine[other.i];
        myRotateX = other.xLine[other.i];
        myRotateY = other.hLine[other.i];
        scale = 0.15 - other.i * 0.01;
        image_xscale = scale;
        image_yscale = scale;
        baseY = myRotateY;
        event_user(0);
    }
}


instance_create(x,y,obj_3dLightController);
alarm[3] = 1;

cInterval = 74;
alarm[0] = cInterval;

cType[0] = 0;
cType[1] = 1;
cType[2] = 0;
cType[3] = 1;
cType[4] = 4;
cType[5] = 2;
cType[6] = 0;
cType[7] = 3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rGeCredit);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(cStart &lt; cSpd * 9)
{
    cStart += cSpd;
    bAngle += bSpd;
    alarm[3] = 1;
}
else
{
    alarm[2] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(cStart &gt; 0)
{
    cStart -= cSpd;
    bAngle -= bSpd;
    alarm[2] = 1;
}
else
{
    alarm[3] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var yOffsetMin,yOffsetMax;
yOffsetMin = -1;
yOffsetMax = 1;
if(cNum == 7)
{
    cNum = 0;
}
else
{
    cNum += 1;
}
type = cType[cNum];
with(obj_3dFloorLightElement)
{
    image_index = other.type;
}
with(obj_3dCeilLightElement)
{
    image_index = other.type;
}

steps += 1;
switch(steps)
{
    case 1:
    case 6:
        with(obj_3dKidGay)
        {
            sprite_index = spr_gayBlue;
            image_xscale = 1.8;
            image_yscale = 2.4;
        }
        obj_3dBlueGay.image_alpha = 0;
        obj_3dRedGay.image_alpha = 0;
        yOffset = random_range(yOffsetMin,yOffsetMax);
        break;
    case 2:
    case 5:
        with(obj_3dKidGay)
        {
            sprite_index = spr_gayRed;
            image_xscale = 1.8;
            image_yscale = 2.4;
        }
        obj_3dBlueGay.image_alpha = 0;
        obj_3dRedGay.image_alpha = 0;
        yOffset = random_range(yOffsetMin,yOffsetMax);
        break;
    case 4:
        with(obj_3dKidGay)
        {
            sprite_index = spr_gayKid;
            image_xscale = 2.52;
            image_yscale = 3.28;
        }
        yOffset = random_range(yOffsetMin,yOffsetMax);
        obj_3dBlueGay.image_alpha = 0;
        obj_3dRedGay.image_alpha = 0;
        break;
    case 3:
    case 7:
        with(obj_3dKidGay)
        {
            sprite_index = spr_gayKid;
            image_xscale = 2.25;
            image_yscale = 3;
        };
        yOffset = 0;
        obj_3dBlueGay.image_alpha = 1;
        obj_3dRedGay.image_alpha = 1;
        break;
    default: break;
}
event_user(type);
alarm[0] = cInterval;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.geStep == 1400)
{
    room_goto(rGeCredit);
}

global.geStep += 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_3dCircleElement)
{
    sprite_index = spr_aquaCircle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_3dCircleElement)
{
    sprite_index = spr_pinkCircle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_3dCircleElement)
{
    sprite_index = spr_redCircle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_3dCircleElement)
{
    sprite_index = spr_yellowCircle;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_3dCircleElement)
{
    sprite_index = spr_blueCircle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_projection(rWidth/2,rHeight - yOffset, 15 + cStart,rWidth/2,  rHeight*2/3, -40 + cStart + bAngle,0,0,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
