<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_faroPhase1Cherry</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 5;
image_yscale = 5;

spd = 150;
rng = irandom_range(0,1000);
count = 5;
angle = random_range(0,360);
event_user(0);
ind = 0;
x = targetX;
y = targetY;

for(i=0;i&lt;5;i+=1)
{
    circle = instance_create(400 + 200 * cos(degtorad(angle + 72 * i)),
                             304 - 200 * sin(degtorad(angle + 72 * i)),
                             obj_faroStartCircle1);
    circle.num = rng;
}

//innerColor = make_color_rgb(230,248,255);
//outterColor = make_color_rgb(136,195,224);

lastNode = instance_create(x,y,obj_faroStartDashNode);
//lastNode.target = self;
lastNode.num = rng;

explodePolygon2(400,304, 5,200,angle,8,2,obj_faroStartBullet3, spr_faroStartBullet, 0.3);
with(obj_faroStartBullet3)
{
    if(num == 0)
    {
        num = other.rng;
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_faroStartCircle1)
{
    if(num == other.rng)
    {
        alarm[0] = 5;
    }
}
with(obj_faroStartBullet3)
{
    if(num == other.rng)
    {
        event_user(0);
    }
}
with(obj_faroStartDashNode)
{
    if(num == other.rng)
    {
        alarm[0] = 5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ind &lt; count)
{
    if(time mod 2 == 0)
    {
        ind += 1;
        angle += 144;
        x = 400 + 200 * cos(degtorad(angle));
        y = 304 - 200 * sin(degtorad(angle));
        lastNode.targetX = x;
        lastNode.targetY = y;
        if(ind &lt; count)
        {
            lastNode = instance_create(x,y,obj_faroStartDashNode);
            lastNode.num = rng;
        }
    }
}
else if(!endDash)
{
    endDash = true;
    alarm[0] = 1;
}
time += 1;
/*if(point_distance(x,y,targetX,targetY) &lt;= spd)
{
    x = targetX;
    y = targetY;
    speed = 0;
    angle += 144;
    event_user(0);
    lastNode.targetX = x;
    lastNode.targetY = y;
    if(ind &gt; 1)
    {
        lastNode = instance_create(x,y,obj_faroStartDashNode);
        lastNode.num = rng;
        /*nextNode = instance_create(x,y,obj_faroStartDashNode);
        if(ind &lt;= count)
        {
            nextNode.target = self;
        }
        nextNode.num = rng;
        lastNode.target = nextNode;
        lastNode = nextNode;*/
/*    }  
}
else if(!endDash)
{
    if(ind &gt; count)
    {
        endDash = true;
        alarm[0] = 1;
    }
    else
    {
        move_towards_point(targetX,targetY,spd);
    }
}

lastNode.targetX = x;
lastNode.targetY = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>targetX = 400 + 200 * cos(degtorad(angle));
targetY = 304 - 200 * sin(degtorad(angle));
ind += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
