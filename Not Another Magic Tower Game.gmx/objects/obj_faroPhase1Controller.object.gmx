<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
time[0] = 35; 
time[1] = 45;
time[2] = 150; 
time[3] = 180;
time[4] = 190;
time[5] = 300; 
time[6] = 310;
time[7] = 330;
time[8] = 340;
time[9] = 450;
time[10] = 460;
time[11] = 490;
time[12] = 500;
time[13] = 530;
time[14] = 550;
time[15] = 570;
time[16] = 580;
time[17] = 590;

tx[0] = 144;ty[0] = 304; 
tx[1] = 656;ty[1] = 304;
tx[2] = 400;ty[2] = 304;
tx[3] = 400;ty[3] = 304;
tx[4] = 400;ty[4] = 304;
tx[5] = 96;ty[5] = 96;
tx[6] = 704;ty[6] = 96;
tx[7] = 704;ty[7] = 512;
tx[8] = 96;ty[8] = 512;
rad = 200;
ang = 45;
cCount = 0;
list = ds_list_create();
ds_list_add(list,3);
ds_list_add(list,2);
ds_list_add(list,1);
ds_list_add(list,0);
ds_list_add(list,7);
ds_list_add(list,6);
ds_list_add(list,5);
ds_list_add(list,4);
for(i=0;i&lt;8;i+=1)
{
    val = ds_list_find_value(list,i);
    tx[9+i] = 400 + rad * cos(degtorad(ang * val));
    ty[9+i] = 304- rad * sin(degtorad(ang * val));
}
/*tx[9] = 400 + rad * cos(degtorad(ang  * 3));ty[9] = 304- rad * sin(degtorad(ang * 3));
tx[10] = 400 + rad * cos(degtorad(ang  * 0));ty[10] = 304- rad * sin(degtorad(ang * 0));
tx[11] = 400 + rad * cos(degtorad(ang  * 1));ty[11] = 304- rad * sin(degtorad(ang * 2));
tx[12] = 400 + rad * cos(degtorad(ang  * 4));ty[12] = 304- rad * sin(degtorad(ang * 4));
tx[13] = 400 + rad * cos(degtorad(ang  * 2));ty[13] = 304- rad * sin(degtorad(ang * 2));
tx[14] = 400 + rad * cos(degtorad(ang  * 5));ty[14] = 304- rad * sin(degtorad(ang * 5));
tx[15] = 400 + rad * cos(degtorad(ang  * 0));ty[15] = 304- rad * sin(degtorad(ang * 0));
tx[16] = 400 + rad * cos(degtorad(ang  * 7));ty[16] = 304- rad * sin(degtorad(ang * 7));*/

num[0] = 1; 
num[1] = 2;
num[2] = 1; 
num[3] = 2;
num[4] = 3; 
num[5] = 1;
num[6] = 2;
num[7] = 3;
num[8] = 4;
num[9] = 1;
num[10] = 2; 
num[11] = 3;
num[12] = 4; 
num[13] = 5;
num[14] = 6; 
num[15] = 7;
num[16] = 8;

type[0] = 0; 
type[1] = 0;
type[2] = 1; 
type[3] = 2;
type[4] = 2; 
type[5] = 0;
type[6] = 0;
type[7] = 0;
type[8] = 0;
type[9] = 4;
type[10] = 4; 
type[11] = 4;
type[12] = 4; 
type[13] = 4;
type[14] = 4; 
type[15] = 4;
type[16] = 4;

count = 17;

path[0] = pathFaroStart1;
path[1] = pathFaroStart2;
path[2] = pathFaroStart3;
path[3] = pathFaroStart4;
path[4] = pathFaroStart5;
path[5] = pathFaroStart6;
for(i=6;i&lt;14;i+=1)
{
    path[i] = path_add();
    path_set_kind(path[i],1);
    path_set_precision(path[i],8);
    path_set_closed(path[i], false);
    if(i == 6 || i == 7)
    {
        px0 = 96;
        py0 = 96;
    }
    else if(i == 8 || i == 9)
    {
        px0 = 704;
        py0 = 96;
    }
    else if(i == 10 || i == 11)
    {
        px0 = 704;
        py0 = 512;
    }
    else if(i == 12 || i == 13)
    {
        px0 = 96;
        py0 = 512;
    }
    path_add_point(path[i],px0,py0,100);
    midX = 400 + rad * cos(degtorad(ang  * ds_list_find_value(list,((i-6) + 4) mod 8)));
    mixY = 304- rad * sin(degtorad(ang * ds_list_find_value(list,((i-6) + 4) mod 8)));
    pathX = 400 + rad * cos(degtorad(ang  * ds_list_find_value(list,i-6)));
    pathY = 304- rad * sin(degtorad(ang * ds_list_find_value(list,i-6)));
    //path_add_point(path[i],midX, midY,100);
    path_add_point(path[i],400, 304,100);
    path_add_point(path[i], pathX, pathY, 100);
}

pTime[0] = 45; 
pTime[1] = 45;
pTime[2] = 190; 
pTime[3] = 190;
pTime[4] = 190;
pTime[5] = 190; 
pTime[6] = 305;
pTime[7] = 310;
pTime[8] = 315;
pTime[9] = 320;
pTime[10] = 335;
pTime[11] = 340;
pTime[12] = 345 ;
pTime[13] = 350;

pInv[0] = 75; 
pInv[1] = 75;
pInv[2] = 70; 
pInv[3] = 70;
pInv[4] = 70;
pInv[5] = 70; 
pInv[6] = 100;
pInv[7] = 100;
pInv[8] = 100;
pInv[9] = 100;
pInv[10] = 100;
pInv[11] = 100;
pInv[12] = 100;
pInv[13] = 100;

pc = 0;
pathCount = 14;
alarm[0] = 460;
alarm[1] = 600;
alarm[2] = 630;
alarm[3] = 660;
dCount = 0;
dashCount = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//explodePolygon2(400,304, 5,200,obj_faroStartDashPoint.angle,8,20,obj_faroStartBullet, spr_faroStartBullet, 0.3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mode == 0)
{
    instance_create(400,304,obj_faroStartDashPoint);
    dCount += 1;
    if(dCount &lt; dashCount)
    {
        alarm[2] = 39;
    }
    else
    {
        with(obj_faroMagicCircle)
        {
            event_user(1);
        }
    }
}
else
{
    if(!obj_osuController.fanalEnd)
    {
        angle = random_range(0,360);
        circle = instance_create(400 + 200 * cos(degtorad(angle + 72 * i)),
                                 304 - 200 * sin(degtorad(angle + 72 * i)),
                                 obj_faroFinalCircle1);
        alarm[2] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_faroBlack)
{
    instance_destroy();
}
with(obj_faroBlinkBlack)
{
    instance_destroy();
}
if(mode == 0)
{
    with(obj_faro_combat)
    {
        image_alpha = 0.8;
    }
}
with(obj_faroMagicCircle)
{
    event_user(0);
}
with(obj_faroStartCircle)
{
    event_user(1);
}
blink = instance_create(0,0,obj_faroWhite1);
blink.image_alpha = 1;
blink.stepAlpha = 0.01;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mc = instance_create(400,304,obj_faroMagicCircle);
if(mode == 1)
{
    mc.alarm[2] = 50;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(cCount &lt; count &amp;&amp; t &gt;= RangeClamp(time[cCount] - 50, 0, 10000))
{
    c = instance_create(tx[cCount], ty[cCount], obj_faroStartCircle);
    c.num = num[cCount];
    c.type = type[cCount];
    c.alarm[0] = time[cCount] - t;
    c.alarm[1] = time[cCount] - t;
    cCount += 1;
}

if(bCount &lt; count &amp;&amp; t &gt;= time[bCount])
{
    with(obj_faroBlinkBlack)
    {
        event_user(0);
    }
    blink = instance_create(0,0,obj_faroWhite1);
    blink.image_alpha = 1;
    blink.stepAlpha = 0.1;
    bCount += 1;
}

if(pCount &lt; count &amp;&amp; t &gt;= RangeClamp(time[pCount] - 30, 0, 10000))
{
    p = instance_create(tx[pCount], ty[pCount], obj_faroStartCircleApproacher);
    p.time = time[pCount] - t;
    pCount += 1;
}

if(pc &lt; pathCount &amp;&amp; t &gt;= pTime[pc])
{
    pFollower = instance_create(400,304,obj_faroStartPathFollower);
    pFollower.path = path[pc];
    pFollower.time = pInv[pc];
    with(pFollower)
    {
        event_user(0);
    }
    pc += 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(list);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
