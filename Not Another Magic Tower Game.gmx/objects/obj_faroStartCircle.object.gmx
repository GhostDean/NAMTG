<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_osuStandardHitCircle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
image_xscale = 0.05;
image_yscale = 0.05;
alpha = 1;
scale = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startAngle = random_range(0,360);
if(type == 0)
{
    explodePolygon(x,y, choose(3,4),280,random_range(1,360),8,40,obj_faroStartBullet, spr_faroStartBullet, 0.3, true);
    /*for(i=0;i&lt;12;i+=1)
    {
        b = instance_create(x,y,obj_faroStartBullet);
        b.speed = 6;
        b.direction = startAngle + i*30;
    }*/
}
else if(type == 1)
{
    for(i=0;i&lt;10;i+=1)
    {
        /*explodePolygon(x,y, 4,200,0,8,10,obj_faroStartBullet1, spr_faroStartBullet, 0.3, true);
        with(obj_faroStartBullet1)
        {
            type = -1;
        }
        explodePolygon(x,y, 4,200,45,8,10,obj_faroStartBullet1, spr_faroStartBullet, 0.3, true);*/
        b1 = instance_create(x,y,obj_faroStartBullet1);
        b1.type = 1;
        b1.startAngle = startAngle + i*36;
        b2 = instance_create(x,y,obj_faroStartBullet1);
        b2.type = -1;
        b2.startAngle = startAngle + i*36;
    }
}
else if(type == 2)
{
    repeat(30)
    {
        b = instance_create(x,y,obj_faroStartBullet);
        b.direction = random_range(0,360);
        b.speed = random_range(4,8);
    }
    /*for(i=0;i&lt;8;i+=1)
    {
        b1 = instance_create(x,y,obj_faroStartBullet2);
        b1.type = 1;
        b1.startAngle = startAngle + i*45;
        b2 = instance_create(x,y,obj_faroStartBullet2);
        b2.type = -1;
        b2.startAngle = startAngle + i*45;
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(type &lt; 3)
{
    if(image_xscale &gt; 0)
    {
        image_xscale -= 0.05;
        image_yscale -= 0.05;
        image_angle -= 30;
        alarm[0] = 1;
    }
    else
    {
        instance_destroy();
    }
}
else
{
    burst = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!drawNum)
{
    if(image_xscale &lt; 0.4)
    {
        image_xscale += 0.04;
        image_yscale += 0.04;
        image_alpha += 0.1;
    }
    else
    {
        image_xscale = 0.4;
        image_yscale = 0.4;
        drawNum = true;
    }
}
else
{
  if(alpha &gt; 0)
  {
    if(burst)
    {
        alpha -= 0.05;
        scale += 0.02;
    }
    else
    {
        alpha -= 0.1;
        scale += 0.04;
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(burst)
{
    if(alpha &lt;= 0)
    {
        alpha = 1;
        scale = 0.5;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_faroStartCircle2);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = time;
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_current();
draw_sprite_ext(spr_osuStandardInd, num, x, y, image_xscale, image_yscale,image_angle, c_white, image_alpha); 
if(drawNum)
{
    draw_sprite_ext(sprite_index, image_index, x, y, scale, scale,0, c_white, alpha);
    draw_sprite_ext(spr_osuStandardInd, num, x, y, scale, scale,0, c_white, alpha);   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
